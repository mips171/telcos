#!/bin/sh
# Hotplug script for ModemManager events.  Place in /etc/hotplug.d/iface/30-keepalive_modemmanager
# and give execute permission.
#
# Copyright 2019 Nicholas Smith <mips171@icloud.com>
#
mm_hotplug_exit() {
	logger -t INFO "Modem Hotplug: Exiting."
	exit
}

stop_modem_service_and_interface() {
	/etc/init.d/modemmanager stop
	ifdown mobiledata
}

reconnect() {
	logger -t INFO "Reconnecting modem now."
	/etc/init.d/modemmanager stop && sleep 2 && ifdown mobiledata && /etc/init.d/modemmanager start && ifup mobiledata
	ifup $INTERFACE
	mm_hotplug_exit
}

checkandreconnect() {
	logger -t INFO "Giving 10 extra seconds to complete modem setup."
	sleep 10
	logger -t INFO "Beginning ping test."
	ping -c3 -s56 -w30 www.telcoantennas.com.au
	if [ $? -eq 0 ]; then
		logger -t INFO "Modem is connected. 3 successful pings."
		mm_hotplug_exit
	else
		logger -t INFO "Modem failed ping test. Reconnecting."
		reconnect
	fi
}

if [ "$INTERFACE" = "mobiledata" ]; then
	if [ "$ACTION" != "ifup" ]; then
		if [ "$(cat /var/mm_hotplug_lock)" = "0" ]; then
			echo 1 >/var/mm_hotplug_lock
			MODEM_IS_OFF="$(cat /sys/class/gpio/gpio14/value)"
			if [ "$MODEM_IS_OFF" = "0" ]; then
				logger -t INFO "ModemManager Hotplug: Modem is powered off per user request. Will no longer attempt to reconnect to mobile network automatically."
				logger -t INFO "$MODEM_IS_OFF"
				stop_modem_service_and_interface
				mm_hotplug_exit
			else
				logger -t INFO "ModemManager Hotplug: Modem is powered on. Attempting to automatically reconnect mobile network."
				logger -t INFO "$MODEM_IS_OFF"
			fi

			MODEM_NEEDS_RMA="$(cat /etc/modemsettings/modem_needs_rma)"
			if [ "$MODEM_NEEDS_RMA" = "true" ]; then
				logger -t INFO "ModemManager Hotplug: Modem is being reset to defaults. Stopping."
				logger -t INFO "$MODEM_NEEDS_RMA"
				mm_hotplug_exit
			else
				logger -t INFO "ModemManager Hotplug: Modem is ready. Attempting to reconnect."
				logger -t INFO "$MODEM_NEEDS_RMA"
			fi

			SIM_NOT_PRESENT="$(qmicli --silent -p -d /dev/cdc-wdm0 --dms-uim-get-state | grep not-present | sed 's/^.*: //' | tr -d "'")"
			if [ "$SIM_NOT_PRESENT" = "not-present" ]; then
				logger -t INFO "ModemManager Hotplug: SIM is not present. Will no longer attempt to reconnect to mobile network automatically."
				logger -t INFO "$SIM_NOT_PRESENT"
				stop_modem_service_and_interface
				mm_hotplug_exit
			else
				logger -t INFO "ModemManager Hotplug: SIM is present. Attempting to automatically reconnect mobile network."
				logger -t INFO "$SIM_NOT_PRESENT"
			fi

			MODEM_STATE="$(mmcli -m any -K | grep -m 1 modem.generic.state | sed 's/^.*: //\' | tr -d "'")"

			if [ "$MODEM_STATE" = "disabled" ]; then
				logger -t INFO "Modem is disabled. Will attempt to initiate connection."
				mmcli -m any -e
				ifup $INTERFACE
				mm_hotplug_exit
			fi

			if [ "$MODEM_STATE" = "enabled" ]; then
				logger -t INFO "Modem is enabled but something may be wrong. Checking connectivity."
				checkandreconnect
			fi

			if [ "$MODEM_STATE" = "connected" ]; then
				logger -t INFO "Modem reports as connected. Checking actual connectivity."
				checkandreconnect
			fi

			if [ "$MODEM_STATE" = "searching" ]; then
				logger -t INFO "Modem is searching."
				checkandreconnect
			fi

			if [ "$MODEM_STATE" = "idle" ]; then
				logger -t INFO "Modem is idle.  Attempting to bring modem back online."
				reconnect
			fi

			if [ "$MODEM_STATE" = "registered" ]; then
				logger -t INFO "Modem is registered."
				checkandreconnect
			fi

			# DEPRECATED by ModemManager 1.14 with 'any' keyword. Any time this script runs, put the current modem and bearer indexes into shared memory, for use by ltestatus and other apps.
			mmcli -L -K | awk {i++}i==2 | sed 's/^.*: //' >/tmp/modemIndex
			echo "$(mmcli -m any -K)" | grep 'bearers.value\[1\]' | sed 's/^.*: //' >/tmp/bearerIndex

			logger -t INFO "Modem hotplug script ran."
		fi
		echo 0 >/var/mm_hotplug_lock
	else
		mm_hotplug_exit
	fi
else
	mm_hotplug_exit
fi
